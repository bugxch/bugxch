<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ONNX - 标签 - Dive Into Think</title>
        <link>https://bugxch.github.io/tags/onnx/</link>
        <description>ONNX - 标签 - Dive Into Think</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>bugxch@126.com (bugxch)</managingEditor>
            <webMaster>bugxch@126.com (bugxch)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 14 Nov 2018 07:09:58 &#43;0000</lastBuildDate><atom:link href="https://bugxch.github.io/tags/onnx/" rel="self" type="application/rss+xml" /><item>
    <title>tf中的padding方式SAME和VALID有什么区别?</title>
    <link>https://bugxch.github.io/tf%E4%B8%AD%E7%9A%84padding%E6%96%B9%E5%BC%8Fsame%E5%92%8Cvalid%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Wed, 14 Nov 2018 07:09:58 &#43;0000</pubDate>
    <author>bugxch</author>
    <guid>https://bugxch.github.io/tf%E4%B8%AD%E7%9A%84padding%E6%96%B9%E5%BC%8Fsame%E5%92%8Cvalid%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[<p>Tensorflow中的padding有两种方式，其中的SAME方式比较特殊，可能产生非对称pad的情况，之前在验证一个tensorflow的网络时踩到这个坑。</p>
<h2 id="tensorflow的计算公式">Tensorflow的计算公式</h2>
<h3 id="二维卷积接口">二维卷积接口</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">tf</span><span class="o">.</span><span class="n">nn</span><span class="o">.</span><span class="n">conv2d</span><span class="p">(</span>
    <span class="nb">input</span><span class="p">,</span> <span class="n">filters</span><span class="p">,</span> <span class="n">strides</span><span class="p">,</span> <span class="n">padding</span><span class="p">,</span> <span class="n">data_format</span><span class="o">=</span><span class="s1">&#39;NHWC&#39;</span><span class="p">,</span> <span class="n">dilations</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="bp">None</span>
<span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="padding计算公式">padding计算公式</h3>
<p>需要注意padding的配置，如果是字符串就有<code>SAME</code>和<code>VALID</code>两种配置，如果是数字list就明确表明padding在各个维度的数量。</p>
<p>首先，<code>padding</code>如果表示确切的数字，其维度是input维度的2倍，因为每个维度两个边需要补pad，比如宽度的左边和右边，高度的上边和下边，但是tensorflow中不会给N维度以及C维度补pad，仅仅在W和H维度补pad，因此对于<code>NHWC</code>，<code>padding =[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]] </code>，对于<code>NCHW</code>的pad的顺序换过来。</p>
<p>然后，如果输入的是字符串选项，补的pad都可以映射到padding这个参数上，</p>
<ul>
<li>
<p><code>VALID</code>模式表示不在任何维度补pad，等价于<code>padding =[[0, 0], [0, 0], [0, 0], [0, 0]]</code>；</p>
</li>
<li>
<p><code>SAME</code>模式表示在<code>stride</code>的尺度下，<code>Wo</code>与<code>Wi</code>保持在stride$S$下保持一致（以宽度维度为例），需要满足如下关系
$$
W_{o}=\left\lceil\frac{W_{i}}{S}\right\rceil
$$
我们知道如果<code>dilation = 1</code>，那么在某个维度上，卷积的输出宽度$W_i$、输出宽度$W_o$和步长$S$，在没有pad的情况下，满足如下的关系式
$$
W o=\left\lfloor\frac{W i-W_{k}}{S}\right\rfloor+1
$$
我们以补最小程度的$P_a$为基准，于是有关系式
$$
W o=\frac{W i+P_{a}-W_{k}}{S}+1
$$
反推过来得到
$$
P_{a}=\left(W_{o}-1\right) S+W_{k}-W_{i}
$$
这是需要补的总的pad，tensorflow的补充pad是尽量两边对称的，</p>
<ul>
<li>如果$P_a$是偶数，那么两边都补$P_l = P_a/2$；</li>
<li>如果$P_a$是奇数，那么左边补$P_l = \lfloor{P_a/2}\rfloor$，右边是$P_r = P_a-P_l$。</li>
</ul>
</li>
</ul>
<p>参考如下的代码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">inputH</span><span class="p">,</span> <span class="n">inputW</span> <span class="o">=</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span>
<span class="n">strideH</span><span class="p">,</span> <span class="n">strideW</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span>
<span class="n">filterH</span> <span class="o">=</span> <span class="mi">4</span>
<span class="n">filterW</span> <span class="o">=</span> <span class="mi">4</span>
<span class="n">inputC</span> <span class="o">=</span> <span class="mi">16</span>
<span class="n">outputC</span> <span class="o">=</span> <span class="mi">3</span>
<span class="n">inputData</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="n">inputH</span><span class="p">,</span><span class="n">inputW</span><span class="p">,</span><span class="n">inputC</span><span class="p">])</span> <span class="c1"># format [N, H, W, C]</span>
<span class="n">filterData</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">float16</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">ones</span><span class="p">([</span><span class="n">filterH</span><span class="p">,</span> <span class="n">filterW</span><span class="p">,</span> <span class="n">inputC</span><span class="p">,</span> <span class="n">outputC</span><span class="p">])</span> <span class="o">-</span> <span class="mf">0.33</span><span class="p">)</span>
<span class="n">strides</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">strideH</span><span class="p">,</span> <span class="n">strideW</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">convOutputSame</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">nn</span><span class="o">.</span><span class="n">conv2d</span><span class="p">(</span><span class="n">inputData</span><span class="p">,</span> <span class="n">filterData</span><span class="p">,</span> <span class="n">strides</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="s1">&#39;SAME&#39;</span><span class="p">)</span>
<span class="n">convOutput</span> <span class="o">=</span> <span class="n">tf</span><span class="o">.</span><span class="n">nn</span><span class="o">.</span><span class="n">conv2d</span><span class="p">(</span><span class="n">inputData</span><span class="p">,</span> <span class="n">filterData</span><span class="p">,</span> <span class="n">strides</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">[[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]])</span> <span class="c1"># padded input data</span>
<span class="k">print</span><span class="p">(</span><span class="s2">&#34;output1, &#34;</span><span class="p">,</span> <span class="n">convOutputSame</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s2">&#34;output2, &#34;</span><span class="p">,</span> <span class="n">convOutput</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s2">&#34;Sum of a - b is &#34;</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">square</span><span class="p">(</span><span class="n">convOutputSame</span> <span class="o">-</span> <span class="n">convOutput</span><span class="p">)))</span>
</code></pre></td></tr></table>
</div>
</div><p>计算结果是</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python">    <span class="n">output1</span><span class="p">,</span>  <span class="n">tf</span><span class="o">.</span><span class="n">Tensor</span><span class="p">(</span>
    <span class="p">[[[[</span> <span class="mf">96.46875</span>  <span class="mf">96.46875</span>  <span class="mf">96.46875</span><span class="p">]</span>
       <span class="p">[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]</span>
       <span class="p">[</span> <span class="mf">96.46875</span>  <span class="mf">96.46875</span>  <span class="mf">96.46875</span><span class="p">]]</span>

      <span class="p">[[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]</span>
       <span class="p">[</span><span class="mf">171.5</span>     <span class="mf">171.5</span>     <span class="mf">171.5</span>    <span class="p">]</span>
       <span class="p">[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]]</span>

      <span class="p">[[</span> <span class="mf">64.3125</span>   <span class="mf">64.3125</span>   <span class="mf">64.3125</span> <span class="p">]</span>
       <span class="p">[</span> <span class="mf">85.75</span>     <span class="mf">85.75</span>     <span class="mf">85.75</span>   <span class="p">]</span><span class="err">￼</span>
       <span class="p">[</span> <span class="mf">64.3125</span>   <span class="mf">64.3125</span>   <span class="mf">64.3125</span> <span class="p">]]]])</span>

    <span class="n">output2</span><span class="p">,</span>  <span class="n">tf</span><span class="o">.</span><span class="n">Tensor</span><span class="p">(</span>
    <span class="p">[[[[</span> <span class="mf">96.46875</span>  <span class="mf">96.46875</span>  <span class="mf">96.46875</span><span class="p">]</span>
       <span class="p">[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]</span>
       <span class="p">[</span> <span class="mf">96.46875</span>  <span class="mf">96.46875</span>  <span class="mf">96.46875</span><span class="p">]]</span>

      <span class="p">[[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]</span>
       <span class="p">[</span><span class="mf">171.5</span>     <span class="mf">171.5</span>     <span class="mf">171.5</span>    <span class="p">]</span>
       <span class="p">[</span><span class="mf">128.625</span>   <span class="mf">128.625</span>   <span class="mf">128.625</span>  <span class="p">]]</span>

      <span class="p">[[</span> <span class="mf">64.3125</span>   <span class="mf">64.3125</span>   <span class="mf">64.3125</span> <span class="p">]</span>
       <span class="p">[</span> <span class="mf">85.75</span>     <span class="mf">85.75</span>     <span class="mf">85.75</span>   <span class="p">]</span>
       <span class="p">[</span> <span class="mf">64.3125</span>   <span class="mf">64.3125</span>   <span class="mf">64.3125</span> <span class="p">]]]],</span> <span class="n">shape</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">float64</span><span class="p">)</span>
    <span class="n">Sum</span> <span class="n">of</span> <span class="n">a</span> <span class="o">-</span> <span class="n">b</span> <span class="ow">is</span>  <span class="mf">0.0</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="onnx计算公式">ONNX计算公式</h2>
<p>onnx的接口，参考IR定义如下</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-c++" data-lang="c++"><span class="n">std</span><span class="o">::</span><span class="n">function</span><span class="o">&lt;</span><span class="kt">void</span><span class="p">(</span><span class="n">OpSchema</span><span class="o">&amp;</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">ConvOpSchemaGenerator</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">filter_desc</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">[</span><span class="o">=</span><span class="p">](</span><span class="n">OpSchema</span><span class="o">&amp;</span> <span class="n">schema</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">R</span><span class="s">&#34;DOC(</span>
<span class="n">The</span> <span class="n">convolution</span> <span class="k">operator</span> <span class="n">consumes</span> <span class="n">an</span> <span class="n">input</span> <span class="n">tensor</span> <span class="n">and</span> <span class="p">{</span><span class="n">filter_desc</span><span class="p">},</span> <span class="n">and</span>
<span class="n">computes</span> <span class="n">the</span> <span class="n">output</span><span class="p">.)</span><span class="n">DOC</span><span class="s">&#34;;</span>
    <span class="n">ReplaceAll</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="s">&#34;{filter_desc}&#34;</span><span class="p">,</span> <span class="n">filter_desc</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">SetDoc</span><span class="p">(</span><span class="n">doc</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Input</span><span class="p">(</span>
        <span class="mi">0</span><span class="p">,</span>
        <span class="s">&#34;X&#34;</span><span class="p">,</span>
        <span class="s">&#34;Input data tensor from previous layer; &#34;</span>
        <span class="s">&#34;has size (N x C x H x W), where N is the batch size, &#34;</span>
        <span class="s">&#34;C is the number of channels, and H and W are the &#34;</span>
        <span class="s">&#34;height and width. Note that this is for the 2D image. &#34;</span>
        <span class="s">&#34;Otherwise the size is (N x C x D1 x D2 ... x Dn). &#34;</span>
        <span class="s">&#34;Optionally, if dimension denotation is &#34;</span>
        <span class="s">&#34;in effect, the operation expects input data tensor &#34;</span>
        <span class="s">&#34;to arrive with the dimension denotation of [DATA_BATCH, &#34;</span>
        <span class="s">&#34;DATA_CHANNEL, DATA_FEATURE, DATA_FEATURE ...].&#34;</span><span class="p">,</span>
        <span class="s">&#34;T&#34;</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Input</span><span class="p">(</span>
        <span class="mi">1</span><span class="p">,</span>
        <span class="s">&#34;W&#34;</span><span class="p">,</span>
        <span class="s">&#34;The weight tensor that will be used in the &#34;</span>
        <span class="s">&#34;convolutions; has size (M x C/group x kH x kW), where C &#34;</span>
        <span class="s">&#34;is the number of channels, and kH and kW are the &#34;</span>
        <span class="s">&#34;height and width of the kernel, and M is the number &#34;</span>
        <span class="s">&#34;of feature maps. For more than 2 dimensions, the &#34;</span>
        <span class="s">&#34;kernel shape will be (M x C/group x k1 x k2 x ... x kn), &#34;</span>
        <span class="s">&#34;where (k1 x k2 x ... kn) is the dimension of the kernel. &#34;</span>
        <span class="s">&#34;Optionally, if dimension denotation is in effect, &#34;</span>
        <span class="s">&#34;the operation expects the weight tensor to arrive &#34;</span>
        <span class="s">&#34;with the dimension denotation of [FILTER_OUT_CHANNEL, &#34;</span>
        <span class="s">&#34;FILTER_IN_CHANNEL, FILTER_SPATIAL, FILTER_SPATIAL ...]. &#34;</span>
        <span class="s">&#34;X.shape[1] == (W.shape[1] * group) == C &#34;</span>
        <span class="s">&#34;(assuming zero based indices for the shape array). &#34;</span>
        <span class="s">&#34;Or in other words FILTER_IN_CHANNEL should be equal to DATA_CHANNEL. &#34;</span><span class="p">,</span>
        <span class="s">&#34;T&#34;</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Input</span><span class="p">(</span>
        <span class="mi">2</span><span class="p">,</span>
        <span class="s">&#34;B&#34;</span><span class="p">,</span>
        <span class="s">&#34;Optional 1D bias to be added to the convolution, has size of M.&#34;</span><span class="p">,</span>
        <span class="s">&#34;T&#34;</span><span class="p">,</span>
        <span class="n">OpSchema</span><span class="o">::</span><span class="n">Optional</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Output</span><span class="p">(</span>
        <span class="mi">0</span><span class="p">,</span>
        <span class="s">&#34;Y&#34;</span><span class="p">,</span>
        <span class="s">&#34;Output data tensor that contains the result of the &#34;</span>
        <span class="s">&#34;convolution. The output dimensions are functions &#34;</span>
        <span class="s">&#34;of the kernel size, stride size, and pad lengths.&#34;</span><span class="p">,</span>
        <span class="s">&#34;T&#34;</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">TypeConstraint</span><span class="p">(</span>
        <span class="s">&#34;T&#34;</span><span class="p">,</span>
        <span class="p">{</span><span class="s">&#34;tensor(float16)&#34;</span><span class="p">,</span> <span class="s">&#34;tensor(float)&#34;</span><span class="p">,</span> <span class="s">&#34;tensor(double)&#34;</span><span class="p">},</span>
        <span class="s">&#34;Constrain input and output types to float tensors.&#34;</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;kernel_shape&#34;</span><span class="p">,</span>
        <span class="s">&#34;The shape of the convolution kernel. If not present, should be inferred from input W.&#34;</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">INTS</span><span class="p">,</span>
        <span class="n">OPTIONAL</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;dilations&#34;</span><span class="p">,</span>
        <span class="s">&#34;dilation value along each spatial axis of the filter. If not present, the dilation defaults is 1 along each spatial axis.&#34;</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">INTS</span><span class="p">,</span>
        <span class="n">OPTIONAL</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;strides&#34;</span><span class="p">,</span>
        <span class="s">&#34;Stride along each spatial axis. If not present, the stride defaults is 1 along each spatial axis.&#34;</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">INTS</span><span class="p">,</span>
        <span class="n">OPTIONAL</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;auto_pad&#34;</span><span class="p">,</span>
        <span class="n">auto_pad_doc</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">STRING</span><span class="p">,</span>
        <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">&#34;NOTSET&#34;</span><span class="p">));</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;pads&#34;</span><span class="p">,</span>
        <span class="n">pads_doc</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">INTS</span><span class="p">,</span>
        <span class="n">OPTIONAL</span><span class="p">);</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">Attr</span><span class="p">(</span>
        <span class="s">&#34;group&#34;</span><span class="p">,</span>
        <span class="s">&#34;number of groups input channels and output channels are divided into.&#34;</span><span class="p">,</span>
        <span class="n">AttributeProto</span><span class="o">::</span><span class="n">INT</span><span class="p">,</span>
        <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">int64_t</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
    <span class="n">schema</span><span class="p">.</span><span class="n">TypeAndShapeInferenceFunction</span><span class="p">([](</span><span class="n">InferenceContext</span><span class="o">&amp;</span> <span class="n">ctx</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">propagateElemTypeFromInputToOutput</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
      <span class="n">convPoolShapeInference</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
    <span class="p">});</span>
  <span class="p">};</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>需要注意上面的<code>auto_pad</code>选项，与tensorflow类似有3个选项</p>
<ul>
<li>
<p><code>NOTSET</code>，同tensorflow的<code>VALID</code></p>
</li>
<li>
<p><code>SAME_UPPER </code>或者<code>SAME_LOWER</code>，这里的内容可以参考onnx文件<code>defs.cc</code>中的代码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-c++" data-lang="c++"><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int64_t</span><span class="o">&gt;</span> <span class="n">pads</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">getRepeatedAttribute</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="s">&#34;pads&#34;</span><span class="p">,</span> <span class="n">pads</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">pads</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">!=</span> <span class="n">n_input_dims</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">fail_shape_inference</span><span class="p">(</span><span class="s">&#34;Attribute pads has incorrect size&#34;</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="n">pads</span><span class="p">.</span><span class="n">assign</span><span class="p">(</span><span class="n">n_input_dims</span> <span class="o">*</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// pads的size是输入维度的2倍
</span><span class="c1"></span>    <span class="k">const</span> <span class="k">auto</span><span class="o">*</span> <span class="n">auto_pad_attr</span> <span class="o">=</span> <span class="n">ctx</span><span class="p">.</span><span class="n">getAttribute</span><span class="p">(</span><span class="s">&#34;auto_pad&#34;</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">((</span><span class="k">nullptr</span> <span class="o">!=</span> <span class="n">auto_pad_attr</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">auto_pad_attr</span><span class="o">-&gt;</span><span class="n">s</span><span class="p">()</span> <span class="o">!=</span> <span class="s">&#34;VALID&#34;</span><span class="p">))</span> <span class="p">{</span> <span class="c1">// 如果pad mode是SAME_UPPER或者SAME_LOWER则进入该分支
</span><span class="c1"></span>      <span class="kt">int</span> <span class="n">input_dims_size</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">n_input_dims</span><span class="p">);</span>
      <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">input_dims_size</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 计算每个axis的pads
</span><span class="c1"></span>        <span class="kt">int64_t</span> <span class="n">residual</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int64_t</span> <span class="n">stride</span> <span class="o">=</span> <span class="n">strides</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">stride</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 如果stride == 1，那么total_pad就是Wk - Stride = Wk - 1
</span><span class="c1"></span>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">input_shape</span><span class="p">.</span><span class="n">dim</span><span class="p">(</span><span class="mi">2</span> <span class="o">+</span> <span class="n">i</span><span class="p">).</span><span class="n">has_dim_value</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">continue</span><span class="p">;</span>
          <span class="p">}</span>
          <span class="n">residual</span> <span class="o">=</span> <span class="n">input_shape</span><span class="p">.</span><span class="n">dim</span><span class="p">(</span><span class="mi">2</span> <span class="o">+</span> <span class="n">i</span><span class="p">).</span><span class="n">dim_value</span><span class="p">();</span>
          <span class="k">while</span> <span class="p">(</span><span class="n">residual</span> <span class="o">&gt;=</span> <span class="n">stride</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">residual</span> <span class="o">-=</span> <span class="n">stride</span><span class="p">;</span>
          <span class="p">}</span>
        <span class="p">}</span>
        <span class="kt">int64_t</span> <span class="n">total_pad</span> <span class="o">=</span> <span class="n">residual</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">effective_kernel_shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="nl">stride</span> <span class="p">:</span> <span class="n">effective_kernel_shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">residual</span><span class="p">;</span> <span class="c1">// effective_kernel_shape = Wk
</span><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="n">total_pad</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
          <span class="n">total_pad</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int64_t</span> <span class="n">half_pad_small</span> <span class="o">=</span> <span class="n">total_pad</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">;</span>
        <span class="kt">int64_t</span> <span class="n">half_pad_big</span> <span class="o">=</span> <span class="n">total_pad</span> <span class="o">-</span> <span class="n">half_pad_small</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">auto_pad_attr</span><span class="o">-&gt;</span><span class="n">s</span><span class="p">()</span> <span class="o">==</span> <span class="s">&#34;SAME_UPPER&#34;</span><span class="p">)</span> <span class="p">{</span>           <span class="c1">// pad mode is here
</span><span class="c1"></span>          <span class="n">pads</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">half_pad_small</span><span class="p">;</span>
          <span class="n">pads</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">input_dims_size</span><span class="p">]</span> <span class="o">=</span> <span class="n">half_pad_big</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">auto_pad_attr</span><span class="o">-&gt;</span><span class="n">s</span><span class="p">()</span> <span class="o">==</span> <span class="s">&#34;SAME_LOWER&#34;</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">pads</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">half_pad_big</span><span class="p">;</span>
          <span class="n">pads</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">input_dims_size</span><span class="p">]</span> <span class="o">=</span> <span class="n">half_pad_small</span><span class="p">;</span>
        <span class="p">}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>上面的代码里面最难理解14~23行，其实这里计算total_pad就是tensorflow中的$P_a$，以上面的公式，做更进一步的推导，
$$
\begin{equation}
\begin{aligned}
P_{a}&amp;=\left(W_{o}-1\right) S+W_{k}-W_{i}\<br>
&amp;=(\left\lceil\frac{W_{i}}{S}\right\rceil - 1)S+W_{k}-W_{i}\<br>
\end{aligned}
\end{equation}
$$</p>
<p>下面的分析有两种情况，对应代码第23行，</p>
<ul>
<li>如果$W_i$是$S$的整数倍，那么$W_i = nS$，带入上面的公式有$P_a = W_k - S$；</li>
<li>如果$W_i$不是$S$的整数倍，那么$W_i = nS+m, m \gt 0$，带入上面的公式有$P_a = W_k - m$，这个$m$就是$W_i$被Stride相除之后的余数，即代码中的<code>residual</code>。</li>
</ul>
<p><code>SAME_UPPER</code>和<code>SAME_LOWER</code>对应$P_a$是奇数的情况，如果是偶数，结果一样，如果是奇数，那么<code>SAME_UPPER</code>放小半部分$\lfloor{P_a/2}\rfloor$，<code>SAME_LOWER</code>放大半部分$P_a - \lfloor{P_a/2}\rfloor$。</p>
</li>
</ul>
<h2 id="举例">举例</h2>
<p>在<a href="https://stackoverflow.com/questions/37674306/what-is-the-difference-between-same-and-valid-padding-in-tf-nn-max-pool-of-t" target="_blank" rel="noopener noreffer">python - What is the difference between &lsquo;SAME&rsquo; and &lsquo;VALID&rsquo; padding in tf.nn.max_pool of tensorflow? - Stack Overflow</a>上有一个比较具体的例子，可以看到，使用<code>SAME</code>模式可以使得stride刚好完整取完所有的input而不会有剩余或者短缺。</p>
<ul>
<li>
<p><code>VALID</code> 模式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">inputs:         <span class="m">1</span>  <span class="m">2</span>  <span class="m">3</span>  <span class="m">4</span>  <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span>  <span class="m">10</span> <span class="m">11</span> <span class="o">(</span><span class="m">12</span> 13<span class="o">)</span>
                <span class="p">|</span>________________<span class="p">|</span>                dropped
                               <span class="p">|</span>_________________<span class="p">|</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>SAME</code>模式</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">               pad<span class="p">|</span>                                      <span class="p">|</span>pad
   inputs:      <span class="m">0</span> <span class="p">|</span><span class="m">1</span>  <span class="m">2</span>  <span class="m">3</span>  <span class="m">4</span>  <span class="m">5</span>  <span class="m">6</span>  <span class="m">7</span>  <span class="m">8</span>  <span class="m">9</span>  <span class="m">10</span> <span class="m">11</span> <span class="m">12</span> 13<span class="p">|</span><span class="m">0</span>  <span class="m">0</span>
               <span class="p">|</span>________________<span class="p">|</span>
                              <span class="p">|</span>_________________<span class="p">|</span>
                                             <span class="p">|</span>________________<span class="p">|</span>
    
</code></pre></td></tr></table>
</div>
</div><p>在这个例子中$W_i = 13, W_k = 6, S = 5$。</p>
</li>
</ul>
<h2 id="参考资料">参考资料</h2>
<ul>
<li><a href="https://blog.csdn.net/wuzqChom/article/details/74785643" target="_blank" rel="noopener noreffer">TensorFlow中CNN的两种padding方式“SAME”和“VALID” - wuzqChom的博客 - CSDN博客</a></li>
<li><a href="https://stackoverflow.com/questions/37674306/what-is-the-difference-between-same-and-valid-padding-in-tf-nn-max-pool-of-t" target="_blank" rel="noopener noreffer">python - What is the difference between &lsquo;SAME&rsquo; and &lsquo;VALID&rsquo; padding in tf.nn.max_pool of tensorflow? - Stack Overflow</a></li>
<li><a href="https://www.quora.com/What-does-the-same-padding-parameter-in-convolution-mean-in-TensorFlow" target="_blank" rel="noopener noreffer">What does the &lsquo;same&rsquo; padding parameter in convolution mean in TensorFlow? - Quora</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
